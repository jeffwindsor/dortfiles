#!/usr/bin/env bash

# Aliases
alias ....='cd ../../../'
alias ...='cd ../../'
alias ..='cd ..'
alias business="cd \$SRC/github.com/jeffwindsor/financials/gnucash/business/imports"
alias home="cd \$SRC/github.com/jeffwindsor/financials/gnucash/home/imports"
alias hub="cd \$SRC/github.com"
alias jeff="cd \$SRC/github.com/jeffwindsor/"
alias md="cd \$HOME/portable/exocortex/markdown"
alias src="cd \$SRC && lla"
alias icloud="cd \$HOME/Library/Mobile\\ Documents/com~apple~CloudDocs/Documents"

# machine specific aliases only on local machine
if test -f .aliasrc.local; then
	source .aliasrc.local
fi

if command -v bat &>/dev/null; then
	alias cat='bat --style=plain'
fi

if command -v eza &>/dev/null; then
	alias l='eza -F --group-directories-first'
	alias la='eza -F --group-directories-first --git --all'
	alias ll='eza -lF --group-directories-first'
	alias lla='eza -lF --group-directories-first --git --all'
	alias tree='eza --tree --git'
	alias treea='eza -lF --tree --git --all'
else
	alias l='ls'
	alias la='ls -a'
	alias ll='ls -l'
	alias lla='ls -la'
fi

if command -v freshfetch &>/dev/null; then
	alias f='freshfetch'
fi

if command -v fzf &>/dev/null; then
	alias theme='wezterm-theme'
	function wezterm-theme() {
		local result
		result=$(fzf <"$XDG_CONFIG_HOME"/wezterm/color_schemes.txt)
		[ -n "$result" ] && sd '^config.color_scheme.*$' "config.color_scheme = '${result}'" "$XDG_CONFIG_HOME"/wezterm/wezterm.lua
	}
fi

if command -v git &>/dev/null; then

	# git commit with a default comment of 'Refactor'
	function git-commit() {
		git commit -m "${1:-'Refactor'}"
	}
	function git-add-commit() {
		git add --all && git-commit "$1"
	}
	function git-add-commit-push() {
		git-add-commit "$1" && git push
	}
	# pretty git log using format set in .zshenv: GIT_LOG_PRETTY_FORMAT. Max count defaults to 10
	function git-log-graph() {
		git log --graph --pretty=format:"${GIT_LOG_PRETTY_FORMAT}" --abbrev-commit --max-count="${1:-10}"
	}
	# find all directories ending in .git (including hidden and ignored listings)
	function git-find-dirs() {
		fd '^.git$' "$1" -HItd --max-depth 4 | sed 's/.git\/$//'
	}
	# apply git command to current directory contents
	function subdir() {
		for d in */; do
			cd ./$d
			echo "=== Executing $1 on $(pwd)"
			eval "$1"
			cd ..
		done
	}
	# prompt user to select from list of git directories under $2 and if user selects one, execute command $1 on it
	function exec-on-git-repos() {
		local result
		result=$(git-find-dirs "$2" | fzf --reverse)
		[ -n "$result" ] && "$1" "$result" && lla
	}
	# git clone from git hub to my source directory
	function ghc() {
		git clone git@github.com:"$1" "$SRC"/github.com/"$1"
	}

	alias hubs="exec-on-git-repos cd \$SRC/github.com/"
	alias srcs="exec-on-git-repos cd \$SRC"

	# lazy git abbreviations
	alias gc="git-commit"
	# alias gw="git-commit"
	alias ga="git add"
	alias gaa="git add --all"
	alias gA="git commit --amend"

	alias git-to-main="git branch -m master main && git push -u origin main"
	alias gb="git branch -v"
	alias gco="git checkout"
	alias gd="git diff --ignore-space-at-eol -b -w --ignore-blank-lines"
	alias gl="git-log-graph"
	alias gll="git log"
	alias gph="git push"
	alias gpl="git pull"
	alias gpls="git-all pull"
	alias gr="git remote -vv"
	alias gs="git status -sb --ignore-submodules"
	alias gup="git-add-commit-push"
	alias gsync="git checkout master && git pull --rebase && git checkout - && git rebase master"
fi

if command -v gitui &>/dev/null; then
	alias gu=gitui
fi

if command -v hx &>/dev/null; then
	alias h='hx'
	alias hexo='hx ~/portable/exocortex'
	alias hfins="nvim -c \":Telescope find_files cwd=\$HOME/portable/financials\""
	alias hconfigs="nvim -c \":Telescope find_files cwd=\$XDG_CONFIG_HOME\""
	alias hdots="yadm list --all | fzf | xargs nvim"

fi

if command -v lazygit &>/dev/null; then
	alias lg=lazygit
fi

if command -v nvim &>/dev/null; then

	alias v='nvim'
	alias v.='nvim .'
	alias vv="nvim -c \":Telescope find_files cwd=\$HOME/.config/nvim/lua/custom\""
	alias fins="nvim -c \":Telescope find_files cwd=\$HOME/portable/financials\""
	alias dots="yadm list --all | fzf | xargs nvim"
	alias dotsn="cd $XDG_CONFIG_HOME/nvim && nvim ."

	function nvim-clean-caches() {
		rm -rf "$HOME"/.local/share/nvim
		rm -rf "$HOME"/.local/state/nvim
		rm -rf "$HOME"/.cache/nvim
	}

fi

if command -v rg &>/dev/null; then
	alias grep='rg'
	alias ar='alias | rg'
fi

if command -v yadm &>/dev/null; then
	function yadm-commit() {
		yadm commit -m "${1:-'Refactor'}"
	}

	function yadm-commit-push() {
		yadm commit -m "${1:-'Refactor'}" && yadm push
	}

	function yadm-add-modified-commit-push() {
		yadm add -u && yadm-commit "$1" && yadm push
	}

	function yadm-log-graph() {
		yadm log --graph --pretty=format:"${GIT_LOG_PRETTY_FORMAT}" --abbrev-commit --max-count="${1:-10}"
	}

	alias ya="yadm add"
	alias yaa="yadm add -u" #stage modified and deletions
	alias yd="yadm diff"
	alias ycm="yadm-commit"
	alias yco="yadm checkout"
	alias yg="cd && yadm enter lazygit && cd -"
	alias yl="yadm-log-graph"
	alias yll="yadm log"
	alias yls="yadm list"
	alias yph="yadm push"
	alias ypl="yadm pull"
	alias yr="yadm remote -vv"
	alias ys="yadm status -sb --ignore-submodules"
	alias yup="yadm-add-modified-commit-push"
fi

# yazi - tui fm
if command -v yazi &>/dev/null; then

	alias y="yazi"

	# shell wrapper that will change to the selected directory on exit
	function ya() {
		local tmp="$(mktemp -t "yazi-cwd.XXXXX")"
		yazi "$@" --cwd-file="$tmp"
		if cwd="$(cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
			cd -- "$cwd"
		fi
		rm -f -- "$tmp"
	}
fi

# zoxide
if command -v zoxide &>/dev/null; then
	alias cd="z"
else
	alias z="cd"
fi
